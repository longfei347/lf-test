<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>test5</title>
</head>
<style>
  main {
    width: 100%;
    /* height: 229px; */
    /* display: flex; */
    justify-content: center;
    align-items: center;
  }
  .p {
    text-align: center;
  }
  .p span {
    display: inline-block;
    width: 7em;
    font: bold 200% Consolas, Monaco, monospace;   /*等宽字体*/
    overflow: hidden;
    white-space: nowrap;
    font-weight: 500;
    border-right: 1px solid transparent;
    animation: typing 5s steps(12), caret .5s steps(1) infinite;
  }
  @keyframes typing{
    from {
        width: 0;
    }
  }
  @keyframes caret{
    50% { border-right-color: currentColor}
  }
  .neonText {
    padding-top: 20px;
    text-align: center;
    margin: auto;
    width: 300px;
    height: 200px;
    background-color: rgba(0, 0, 0, 0.5);
    color: #fff;
    text-shadow:
        0 0 7px #fff,
        0 0 10px #fff,
        0 0 21px #fff,
        0 0 42px #0fa,
        0 0 82px #0fa,
        0 0 92px #0fa,
        0 0 102px #0fa,
        0 0 151px #0fa;
  }
</style>

<body>
  <!-- <el-collapse v-model="mobilePunchingArrowDirection">
    <el-collapse-item class="main_page_punching_title" title="导航菜单" name="1">
      <span v-for="(itm,idx) in routers" :key="idx" style="padding: 2px 4px;">
        <router-link :to="itm.path">{{$t(itm.meta ? itm.meta.title : 'url')}}</router-link>
      </span>
    </el-collapse-item>
  </el-collapse> -->
  <form action="/aa">
    <p>中国人</p>
    <input type="button" value="Click Me" />
    &#9734;
  </form>
  <main class="main">
    <p class="p">
      <span>hello GitHub</span>
    </p>
    <table style="width: 400px;" border="1">
      <tr>
        <td colspan="2">A</td>
      </tr>
      <tr>
        <td rowspan="2">B</td>
        <td>1</td>
      </tr>
      <tr>
        <td colspan="2">D</td>
      </tr>
      <tr>
        <td colspan="2">E</td>
      </tr>
    </table>
    <div id="test"></div>
    <div id="files">open file</div>
    <div class="neonText">
      <h1>404</h1>
      <p>not found</p>
    </div>
  </main>
  <!-- <div onclick="console.log('first div')">
  <div onclick="console.log('second div')">
    <button onclick="console.log('button')">
      Click!
    </button>
  </div>
</div> -->
<script src="js/jquery-3.5.1.min.js"></script>
<script>
/*let a=function(){};
let b = function(){ };
console.log(a==b)
console.log(a<b)
console.log(a>b)
console.log(a>=b)
console.log(a<=b)*/
let aa={
  0: {a:1},
  1: {b:1}
}
var a=1;
if(1) {
  function a(){}
  a=2
  console.log(a)
}
console.log(a);
var param = {
  isEn: false, // true
  evaluationEnv: '', // 评价环境
  toolRegion: '', //国家云
  toolPlatForm: '3333', //平台名称true 平台英文名
  toolId: '156', //工具ID（评价埋码ID）true
  toolName: '', //工具名称
  evaluator: '777776666', //评价人工号true
  evaluatorName: '', //评价人姓名
  mobileTag: '', //是否手机端，Y是，N否，默认web端
  expandField: {}, //扩展字段
  showToolName: true,
  module: {
    id: "SIMSSpace Portal",
    name: "首页",
    url: "w3.huawei.com"
  },
  keywordFlag: true,
  mode: 'beta'
};


let message = {}
message.body = {
  start: '0',
  limit: '10',
  rfc_type: 'MyRFCTotal',
  status: 'TD&PM Approve',
  module_type: 'RFCRefactor',
  sort: 'last_update_time',
  dir: 'DESC',
  roarand: '9STWk3CN4aXmJ1O1gjsjMBUmOUiAifTQAvDbeyEfuFyCSdpCeatx0cO8iVDJplBs',
  serviceId: 'app.service.cs_nc_uniportal.getWorkSpaceRFCList',
}
message.header = {}
message.header.commonValues = {}
RunScriptUtil = {}
RunScriptUtil.tqlEscape = () => {}
let Message = function(argument) {
  // body...
}
let CloudServiceAccessor = {}
CloudServiceAccessor.process = () => {
  let result = { body: { result: {} } }
  return result
}

function SuperClass() {
  this.tempList = ['red', 'blue']
}

function SubClass() {
  SuperClass.call(this)
}
const intance1 = new SubClass();
intance1.tempList.push('white')
const intance2 = new SubClass();
intance2.tempList.push('black')
console.log(intance2.tempList)


var num = 4
let obj = {
  num: 1,
  fn: function() {
    var num = 2;
    setTimeout(() => {
      var num = 3;
      console.log(this.num);
    }, 1000)
  }
}
obj.fn.call(obj)

function isMatch(s, p) {
  let len1 = p.length,
    len2 = s.length;
  let dp = [
    []
  ];
  dp[0][0] = true;
  for (let i = 1; i <= len1; i++) {
    if (p.charAt(i - 1) != '*') {
      break;
    }
    dp[i][0] = true;
  }

  for (let i = 1; i <= len1; i++) {
    for (let j = 1; j <= len2; j++) {
      if (p.charAt(i - 1) == s.charAt(j - 1) || p.charAt(i - 1) == '?') {
        dp[i][j] = dp[i - 1][j - 1];
      } else if (p.charAt(i - 1) == '*') {
        dp[i][j] = dp[i - 1][j] | dp[i][j - 1];
      }
    }
  }
  return dp[len1][len2];
}


// console.log(str2.replace(/[^\x00-\xff\u4e00-\u9fa5。；，：“”（）、？《》！]+/g, ''))
function f() { console.log('I am outside!'); }

(function() {
  if (false) {
    // 重复声明一次函数f
    function f() { console.log('I am inside!'); }
  }
  console.log('f:', f) // f会声明提前成 undefined
  // f(); // error
}());
// console.log(str.match(/[^\x00-\xff\u4e00-\u9fa5。；，：“”（）、？《》！]+/g))
// document.querySelector("#test").innerHTML=str
/*'use strict';

let greet = {
text: "hello",
  sayhi: function() { console.log(this.text); },
  sayBye: function() { console.log("Bye"); },
  set: na =>{
this.text = na;
  }
};

greet.set("world");

(greet.text == "hello" ? greet.sayhi : greet.sayBye)();
class Test {}
Test = class Test1 {

}
let a = 1;
let obj = {
    a: 2,
    fn: () => {
        let a = 3;
        setTimeout(() => {
            console.log(this.a)
        });
    }
}
obj.fn.call(obj)*/
// files
async function getFile() {
  const dirHandle = await window.showOpenFilePicker();
  dirHandle[0].getFile().then(s => console.log(s))

  // run code for dirHandle
}
document.querySelector('#files').addEventListener('click', () => getFile())

// JSON.parse('{"1": 1, "2": 2, "3": {"4": 4, "5": {"6": 6}}}', function (k, v) {
//     console.log(k);
//     return v;
// });
/*var name = "cat";
switch (name) {
    case "cat":
        console.log("cat");
    case "dog":
        console.log("dog");
        break;
    case "fish":
        console.log("fish");
        break;
    default:
        console.log("default");
}*/
/*function Person(){this.age = 100}
　　var person1 = new Person;
person1.hasOwnProperty("age")
var keys = Object.keys(Person.prototype)
var keys2 = Object.getOwnPropertyNames(Person.prototype)*/


/*class Parent {
    static long = ()=>console.log('long')
}
class Sub extends Parent {
    name = 'sub'
}
class Son extends Parent {
    #name = 'sub'
    static name = 'son'
}*/
/*var employee = {};
Object.defineProperty(employee, 'id', {
  writable: false,
  value: '9527',
});

employee.id = '9528';
console.log(employee.id);

Object.defineProperty(employee, 'id', {
  writable: true,
});
employee.id = '9529';
console.log(employee.id);
*/
</script>

</html>
